Planned Implementations
- secret nums bitmap implementation can be changed ot be simpler check in mastermind class
- code cleanup. response parsing is redundant, can be simplified (mastermind.checkCode());
- test and get feedback
    x implement focus shifting if using keypad/keyboard to provide additional user input methods
    ? add wordle like interfaces,
        - black out incorrect numbers
        - leader board at end screen
        - some type of response on hard difficulty

- customize display so it doesnt look default
? add start screen to provide game instructions
    - depending on implementation, add number picker to select how long will be (4 - 8), implement multiple layouts (numberpickers or editabletext fields)
    - time attack with distractions?
    - factor in customization (code length, number of attempts)

? add in end screen
    - implement string variable for text to show message
    - implement stats from game (worlde like stats, try again button. maybe best time?)
    - set a style to avoid hardcoding text colors

- suggestion: on hard, consume 1-2 attempts to provide a hint.
    - add a hint button -> creates popup to confirm hint use
- suggestion: some ui additions to show info has been updated
    - ie. flash the text box / big -1 on attempts like damage counter / combine records display by appending the view above the guess (change number picker for editableText)

- add some effects (audio + animation on win, etc)
- factor in horizontal mode (test on different device sizes)

notes;
//do doc strings to be more readability, there are built in functions Java docstring style copy that //comment only if confusing or esoteric code smell
//the use of secretNums bitmap overkill, can simplify to checking index , dictionary/ keyvalue par, keep index in mind and looking forwrd

look at unit tests and testing specific units of the code
single responsibility principle - code does specific things
is this part of my code doing exactly what i expecting it to do
can decompose - is random number generator
helps break down the code and helps towards correctness
end to end test - see if all the parts fit together and test the components individually

=============================================================================================================================

Wednesday Goals
- add difficulty setting
    x add difficulty buttons
    x implement button clicks to set difficulty
    x disable and hide buttons after buttons have been clicked
    x re-enable after and show buttons after game restart has been clicked
    - (optional) add restart in same difficulty if possible
    - worry about mutli click from difficulty settings

- complete hint system (connected with difficulty setting)
    - provide difficulty options at each restart and provide highlighted hints accordingly
        ? (scrapped) easy: highlights correct digits with green, multiple correct nums with blue and single correct nums with orange
        x medium: hl correct digits with green and correct nums with orange
        x hard: highlight all pickers with the responses from directions. green if num is right pos, orange if correct num but not spot, blank for no correct

        main will have difficult setting. click button -> set the difficulty rating
        create an array of numbers to indicate the reading output when checking code
        - [0,0,0,0]
        - 0 indicates incorrect
        - 1 indicates value is in the code
        - 2 indicates value is in the correct pos
        colorNumberPicker will respond to request accordingly depending on difficulty
        - if diff 1, color individual pickers based on result
        - if 2, color whole wheel as a response
        - if 0, color individual wheels with additional color of multiples

        - simplify the attempts record with colors based on difficulty
        x reveal only as many letters as there is, wordle example
        x go through priority (colorize correct position and number first before secondary colorization) (PRIORITY)
        x fix easy mode / adjust (removed )

        x implement a screen manager to handle the screen items

- shift UI around to be more user friendly


Thursday
? gitignore logs and all other info not pertaining to the project
? remove comments unless code segments are confusing
x make corrections

? remove debugging messages
x refactor and cleanup any messy code
x move some code to different files


java
remove logs- remove error log files from github
almost never have global variables, pass individual elements across difficult to control
hin difficulty
array of 4 ids

        //dismiss popup when touched, might remove
//        popupView.setOnTouchListener(new View.OnTouchListener(){
//            @Override
//            public  boolean onTouch(View v, MotionEvent event){
//                popupWindow.dismiss();
//                return true;
//            }
//        });
